{"version":3,"sources":["atoms.tsx","components/CreateCate.tsx","components/CreateToDo.tsx","components/Todo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["toDoState","atom","key","default","toDoSelector","selector","get","toDos","category","selectOption","filter","toDo","cateTest","MakeCategories","setCategory","useSetRecoilState","useRecoilState","cate","setCate","useForm","register","handleSubmit","setValue","onInput","event","target","value","deleteCategory","window","confirm","id","old","deletOne","findIndex","one","label","slice","onSubmit","cateInput","oldValue","Date","now","required","placeholder","map","cates","onClick","CreateToDo","setToDos","categoryId","useRecoilValue","oldToDos","text","ToDo","cateTests","name","currentTarget","targetIndex","newToDo","Container","styled","div","Separateline","ToDoList","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","todo","setTodo","setSeletBtn","useEffect","cateList","localStorage","getItem","todoList","JSON","parse","setItem","stringify","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.563c8f73.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport interface IToDo {\n    text: string;\n    id: number;\n    category:string;\n}\n\nexport const toDoState = atom<IToDo[]>({\n    key: \"toDo\",\n    default: [],\n});\n\nexport const toDoSelector = selector({\n    key: \"toDoSelector\",\n    get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(selectOption);\n    return toDos.filter((toDo) => toDo.category === category);\n    },\n});\n\n//creating-category\n\ninterface Icate {\n    label:string;\n    id:number;\n}\n\nexport const cateTest = atom<Icate[]>({\n    key: \"cateTest\",\n    default: [],\n});\n\n\nexport const selectOption = atom<string>({\n    key: \"selectOptions\",\n    default: \"\",\n});","import { useForm } from 'react-hook-form';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport { cateTest, selectOption } from '../atoms';\n\ninterface ICateForm {\n    cateInput: string;\n}\n\nfunction MakeCategories (){\n    const setCategory = useSetRecoilState(selectOption);\n    const [cate, setCate] = useRecoilState(cateTest);\n    const {register, handleSubmit, setValue} = useForm<ICateForm>();\n    // const onInput = (event: React.FormEvent<HTMLSelectElement>) => { setCategory(event.currentTarget.value as any);\n    // // console.log(category);\n    // };\n    const onInput = (event:any) => { \n        setCategory(event.target.value);\n        };\n    const handleForm = ({cateInput}: ICateForm) =>{ \n        setCate((oldValue) =>[\n            { label:cateInput, id: Date.now() }, ...oldValue,]);\n            setCategory(cateInput);\n            setValue(\"cateInput\", \"\");\n            // console.log(cate);\n        }\n\n    const deleteCategory =(event :any)=>{\n        if(window.confirm(`are you sure you want to delete \"${event.target.id}\"?`)){\n            setCate((old)=> {\n                const deletOne = old.findIndex((one)=>one.label === event.target.id);\n                return [\n                    ...old.slice(0, deletOne),\n                    ...old.slice(deletOne+1)\n                ];\n            })\n        }else{\n            return;\n        }\n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit(handleForm)}>\n                <input {...register(\"cateInput\", {required:\"create a category\"})} placeholder='create a categoty' />\n            </form> \n            {/* <Selection value={category} onInput={onInput}>\n                {cate?.map((cates) => (\n                <option key={cates.id} value={cates.label}>{cates.label}</option>\n                ))}\n            </Selection> */}\n            <ul>\n                {cate?.map((cates) => (\n                <button key={cates.id} value={cates.label} onClick={onInput }>\n                    {cates.label}\n                    <div key={cates.id + `delete`} id={cates.label} onClick={deleteCategory}>‚ùå</div>\n                </button>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default MakeCategories;","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { selectOption, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const categoryId = useRecoilValue(selectOption);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, id: Date.now(), category:categoryId},\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;","import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { cateTest, IToDo, selectOption, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n    const setToDos = useSetRecoilState(toDoState);\n    const cateTests = useRecoilValue(cateTest);\n    const categoryId = useRecoilValue(selectOption);\n    const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n        currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n        const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n        const newToDo = { text, id, category: name as any };\n        return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n        ];\n    });\n    };\n    return (\n    <li>\n        <span>{text}</span>\n        {cateTests?.filter((cates)=>(\n            cates.label !== categoryId\n        )).map(cates => (\n            <button key={`${id}+${cates.label}`} \n                name={`${cates.label}`} \n                onClick={onClick}>\n                    {cates.label}\n                </button>\n        ))}\n\n    </li>\n    );\n}\n\nexport default ToDo;","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport styled from 'styled-components';\nimport { toDoSelector } from \"../atoms\";\nimport MakeCategories from './CreateCate';\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./Todo\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 80vh;\n`;\n\nconst Separateline = styled.div`\n  width: 100%;\n  height: 1px;\n  margin: 30px auto;\n  background-color: aliceblue;\n`;\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  return (\n    <Container>\n      <h1>To-do Category</h1>\n      <MakeCategories/>\n      <Separateline></Separateline>\n      <h1>To-Dos List</h1>\n      <CreateToDo />\n      {toDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </Container>\n  );\n\n}\n\nexport default ToDoList;","import { useEffect } from 'react';\nimport { useRecoilState, useSetRecoilState} from 'recoil';\nimport { createGlobalStyle } from \"styled-components\";\nimport { cateTest, selectOption, toDoState } from './atoms';\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\n\nfunction App() {\n  const [cate, setCate] = useRecoilState(cateTest);\n  const [todo, setTodo] = useRecoilState(toDoState);\n  const setSeletBtn = useSetRecoilState(selectOption);\n  useEffect(()=>{\n    const cateList = localStorage.getItem(\"category\");\n    const todoList = localStorage.getItem(\"todoList\");\n    if(cateList === null){\n        return;\n    }else{\n      setCate(JSON.parse(cateList));\n      setSeletBtn(JSON.parse(cateList)[0]?.label);\n    }\n\n    if(todoList === null){\n      return;\n    }else{\n      setTodo(JSON.parse(todoList));\n    }\n\n    }, []);\n\n  useEffect(()=>{\n    localStorage.setItem(\"category\", JSON.stringify(cate));\n    localStorage.setItem(\"todoList\", JSON.stringify(todo));\n    setSeletBtn(cate[0]?.label);\n  });\n\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};"],"sourceRoot":""}